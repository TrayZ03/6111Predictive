"0","# create data frames to store ROC AUC calculations for each probability threshold"
"0","roc_data <- data.frame(threshold=seq(1,0,-0.01), lr_fpr=0, knn_tpr=0)"
"0",""
"0","for (i in roc_data$threshold) {"
"0","  # subset the test result based on which predictions are over the threshold i"
"0","  lr_over_threshold <- lr_test_results[lr_test_results$.pred_Attrited.Customer >= i, ]"
"0","  knn_over_threshold <- knn_test_results[knn_test_results$.pred_Attrited.Customer >= i, ]"
"0","  nb_over_threshold <- nb_test_results[nb_test_results$.pred_Attrited.Customer >= i, ]"
"0","  rf_over_threshold <- rf_test_results[rf_test_results$.pred_Attrited.Customer >= i, ]"
"0","  xgb_over_threshold <- xgb_test_results[xgb_test_results$.pred_Attrited.Customer >= i, ]"
"0"," "
"0","  # get the predicted negative class for each model"
"0","  lr_pred_neg <- sum(lr_over_threshold$Attrition_Flag==""Existing Customer"")"
"0","  knn_pred_neg <- sum(knn_over_threshold$Attrition_Flag==""Existing Customer"")"
"0","  nb_pred_neg <- sum(nb_over_threshold$Attrition_Flag==""Existing Customer"")"
"0","  rf_pred_neg <- sum(rf_over_threshold$Attrition_Flag==""Existing Customer"")"
"0","  xgb_pred_neg <- sum(xgb_over_threshold$Attrition_Flag==""Existing Customer"")"
"0","  "
"0","  "
"0","  # get the predicted positive class for each model"
"0","  lr_pred_pos <- sum(lr_over_threshold$Attrition_Flag==""Attrited Customer"")"
"0","  knn_pred_pos <- sum(knn_over_threshold$Attrition_Flag==""Attrited Customer"")"
"0","  nb_pred_pos <- sum(nb_over_threshold$Attrition_Flag==""Attrited Customer"")"
"0","  rf_pred_pos <- sum(rf_over_threshold$Attrition_Flag==""Attrited Customer"")"
"0","  xgb_pred_pos <- sum(xgb_over_threshold$Attrition_Flag==""Attrited Customer"")"
"0","  "
"0","  # get the true positives and negatives (same for each model)"
"0","  true_neg <- sum(lr_test_results$Attrition_Flag==""Existing Customer"")"
"0","  true_pos <- sum(lr_test_results$Attrition_Flag==""Attrited Customer"")"
"0","  "
"0","  # compute false and true positive rates and store in roc_data tibble"
"0","  lr_fpr <- lr_pred_neg/true_neg"
"0","  knn_fpr <- knn_pred_neg/true_neg"
"0","  nb_fpr <- nb_pred_neg/true_neg"
"0","  rf_fpr <- rf_pred_neg/true_neg"
"0","  xgb_fpr <- xgb_pred_neg/true_neg"
"0","  roc_data[roc_data$threshold==i, ""lr_fpr""] <- lr_fpr"
"0","  roc_data[roc_data$threshold==i, ""knn_fpr""] <- knn_fpr"
"0","  roc_data[roc_data$threshold==i, ""nb_fpr""] <- nb_fpr"
"0","  roc_data[roc_data$threshold==i, ""rf_fpr""] <- rf_fpr"
"0","  roc_data[roc_data$threshold==i, ""xgb_fpr""] <- xgb_fpr"
"0","  "
"0","  lr_tpr <- lr_pred_pos/true_pos"
"0","  knn_tpr <- knn_pred_pos/true_pos"
"0","  nb_tpr <- nb_pred_pos/true_pos"
"0","  rf_tpr <- rf_pred_pos/true_pos"
"0","  xgb_tpr <- xgb_pred_pos/true_pos"
"0","  "
"0","  roc_data[roc_data$threshold==i, ""lr_tpr""] <- lr_tpr"
"0","  roc_data[roc_data$threshold==i, ""knn_tpr""] <- knn_tpr"
"0","  roc_data[roc_data$threshold==i, ""nb_tpr""] <- nb_tpr"
"0","  roc_data[roc_data$threshold==i, ""rf_tpr""] <- rf_tpr"
"0","  roc_data[roc_data$threshold==i, ""xgb_tpr""] <- xgb_tpr"
"0","  "
"0","}"
