"0","# create models using best hyperparameter values"
"0","best_lr_mod <- "
"0","  logistic_reg(penalty = best_lr_penalty$Hyperparameter_Value[1], mixture = 1) %>% "
"0","  set_engine(""glmnet"")"
"0",""
"0","best_knn_mod <- "
"0","  nearest_neighbor(neighbors = best_knn_neighbors$Hyperparameter_Value[1]) %>% "
"0","  set_mode(""classification"") %>%"
"0","  set_engine(""kknn"")"
"0",""
"0","best_nb_mod <- # naive bayes model"
"0","  naive_Bayes(smoothness = best_nb_smoothness$Hyperparameter_Value[1]) %>%"
"0","  set_mode(""classification"") %>%"
"0","  set_engine(""klaR"")"
"0",""
"0","best_rf_mod <- # random forest"
"0","  rand_forest(mtry = best_rf_mtry$Hyperparameter_Value[1]) %>% "
"0","  set_engine(""ranger"", importance='impurity') %>%"
"0","  set_mode(""classification"")"
"0",""
"0","best_xgb_mod <- # xgboost classifier"
"0","  boost_tree(trees = best_xgb_trees$Hyperparameter_Value[1]) %>%"
"0","  set_engine(""xgboost"") %>%"
"0","  set_mode(""classification"")"
"0",""
"0","# prepare training data in the recipe"
"0","rec <- rec %>%"
"0","  prep(training = train_set)"
"0",""
"0","# fit models"
"0","best_lr_fit <- "
"0","  best_lr_mod %>%"
"0","  fit(Attrition_Flag ~ ., data = bake(rec, new_data = train_set))"
"0",""
"0","best_knn_fit <- "
"0","  best_knn_mod %>%"
"0","  fit(Attrition_Flag ~ ., data = bake(rec, new_data = train_set))"
"0",""
"0","best_nb_fit <-"
"0","  best_nb_mod %>%"
"0","  fit(Attrition_Flag ~ ., data = bake(rec, new_data = train_set))"
"0",""
"0","best_rf_fit <- "
"0","  best_rf_mod %>%"
"0","  fit(Attrition_Flag ~ ., data = bake(rec, new_data = train_set))"
"0",""
"0","best_xgb_fit <- "
"0","  best_knn_mod %>%"
"0","  fit(Attrition_Flag ~ ., data = bake(rec, new_data = train_set))"
