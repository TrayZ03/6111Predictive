"0","# create models"
"0","lr_mod <- "
"0","  logistic_reg(penalty = tune(), mixture = 1) %>% "
"0","  set_engine(""glmnet"")"
"0",""
"0","knn_mod <- "
"0","  nearest_neighbor(neighbors = tune()) %>% "
"0","  set_mode(""classification"") %>%"
"0","  set_engine(""kknn"")"
"0",""
"0","# split the training set into 10 cv folds"
"0","cv_set <- vfold_cv(train_set, strata = ""Attrition_Flag"", v = 10)"
"0",""
"0","# create workflows"
"0","lr_workflow <- "
"0","  workflow() %>% "
"0","  add_recipe(rec) %>%"
"0","  add_model(lr_mod)"
"0",""
"0","knn_workflow <- "
"0","  workflow() %>% "
"0","  add_recipe(rec) %>%"
"0","  add_model(knn_mod)"
"0",""
"0","# create range of values for to try during tuning"
"0","lr_reg_grid <- tibble(penalty = 10^seq(-4, -1, length.out = 30))"
"0","knn_neighbors_grid <- tibble(neighbors = 3:10)"
"0",""
"0","# store results of cv tuning"
"0","lr_results <- "
"0","  lr_workflow %>% "
"0","  tune_grid(cv_set,"
"0","            grid = lr_reg_grid,"
"0","            control = control_grid(save_pred = TRUE),"
"0","            metrics = metric_set(roc_auc))"
"0",""
"0","knn_results <- "
"0","  knn_workflow %>% "
"0","  tune_grid(cv_set,"
"0","            grid = knn_neighbors_grid,"
"0","            control = control_grid(save_pred = TRUE),"
"0","            metrics = metric_set(roc_auc))"
