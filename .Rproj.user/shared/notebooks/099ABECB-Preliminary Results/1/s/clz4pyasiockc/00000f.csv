"0","# get best hyperparameter values from tuning results"
"0","best_lr_penalty <- top_models %>%"
"0","  filter(Model == ""Logistic Regression"") %>%"
"0","  filter(Mean_CV_ROC_AUC == max(Mean_CV_ROC_AUC)) %>%"
"0","  select(Hyperparameter_Value)"
"0",""
"0","best_knn_neighbors <- top_models %>%"
"0","  filter(Model == ""K-Nearest Neighbors"") %>%"
"0","  filter(Mean_CV_ROC_AUC == max(Mean_CV_ROC_AUC)) %>%"
"0","  select(Hyperparameter_Value)"
"0",""
"0","# create models using best hyperparameter values"
"0","best_lr_mod <- "
"0","  logistic_reg(penalty = best_lr_penalty, mixture = 1) %>% "
"0","  set_engine(""glmnet"")"
"0",""
"0","best_knn_mod <- "
"0","  nearest_neighbor(neighbors = best_knn_neighbors) %>% "
"0","  set_mode(""classification"") %>%"
"0","  set_engine(""kknn"")"
"0",""
"0","# prepare training data in the recipe"
"0","rec <- rec %>%"
"0","  prep(training = train_set)"
"0",""
"0","# fit models"
"0","best_lr_fit <- "
"0","  best_lr_mod %>%"
"0","  set_engine(""glm"") %>%"
"0","  fit(Attrition_Flag ~ ., data = bake(rec, new_data = train_set))"
"0",""
"0","best_knn_fit <- "
"0","  best_knn_mod %>%"
"0","  set_engine(""kknn"") %>%"
"0","  fit(Attrition_Flag ~ ., data = bake(rec, new_data = train_set))"
